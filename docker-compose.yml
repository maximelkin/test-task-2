version: "3"

services:
  rabbit:
    image: rabbitmq:3-alpine
    volumes:
      - "./volumes/rabbit:/var/lib/rabbitmq"

  redis:
    image: redis:5-alpine

  postgres:
    image: postgres:11-alpine
    environment:
      POSTGRES_DB: store
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - "./volumes/postgres:/var/lib/postgresql/data"

  origin:
    image: origin
    build:
      context: .
      dockerfile: Dockerfile

  api:
    image: origin
    command: ["bash", "wait-for-it.sh", "-t", "0", "rabbit:5672", "--", "npm", "start", "--prefix", "packages/api"]
    restart: always
    ports:
      - "80:80"
    environment:
      PORT: 80
      RABBIT_HOST: amqp://rabbit:5672
      REDIS_HOST: redis://redis:6379
    env_file:
      - .env
    depends_on:
      - store
      - aggregator
      - rabbit
      - redis

  store:
    image: origin
    command: ["bash", "wait-for-it.sh", "-t", "0", "rabbit:5672", "--", "npm", "start", "--prefix", "packages/store"]
    restart: always
    environment:
      RABBIT_HOST: amqp://rabbit:5672
      POSTGRES_HOST: postgres://postgres:postgres@postgres:5432/store
    ports:
      - "9229:9229"
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbit

  aggregator:
    image: origin
    command: ["bash", "wait-for-it.sh", "-t", "0", "rabbit:5672", "--", "npm", "start", "--prefix", "packages/aggregator"]
    restart: always
    environment:
      RABBIT_HOST: amqp://rabbit:5672
      REDIS_HOST: redis://redis:6379
    env_file:
      - .env
    depends_on:
      - store
      - rabbit
      - redis
  test:
    image: origin
    command: ["bash", "wait-for-it.sh", "-t", "0", "api:80", "--", "npm", "test", "--prefix", "packages/test"]
    environment:
      API_HOST: http://api:80/
    depends_on:
      - api
